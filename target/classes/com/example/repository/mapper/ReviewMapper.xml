<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="com.example.repository.mapper.ReviewMapper">
 
 <!-- 리뷰 등록 -->
	<insert id="insertReview" parameterType="com.example.sproute.domain.Review">
	<selectKey keyProperty="reviewId" resultType="int" order="BEFORE">
		SELECT seq_review.nextval AS reviewId FROM DUAL
	</selectKey>
		INSERT INTO REVIEW (reviewId, userId, rating, content, title, itemId, regDate)
			VALUES(#{reviewId}, #{userId}, #{rating}, #{content}, #{title}, #{itemId}, TO_CHAR(SYSDATE,'YYYY-MM-DD'))
	</insert>
	
<!-- 특정 회원이 작성한 리뷰 조회 -->
	<select id="selectReviewByUserId" resultType="com.example.sproute.domain.Review">
		SELECT REVIEWID, TITLE, RATING, ITEMID, CONTENT
		FROM REVIEW
		WHERE USERID = #{userId}
	</select>
	
<!-- 아이템별 리뷰 조회 -->
	<select id="selectReviewByItemId" resultType="com.example.sproute.domain.Review">
		SELECT TITLE, RATING, ITEMID, CONTENT, USERID, TO_CHAR(REGDATE, 'YYYY-MM-DD') AS REGDATE
		FROM REVIEW
		WHERE ITEMID = #{itemId}
	</select>

<!-- 리뷰아이디별 리뷰 조회 -->
	<select id="selectReviewByReviewId" resultType="com.example.sproute.domain.Review">
		SELECT REVIEWID, USERID, RATING, CONTENT, TITLE, ITEMID
		FROM REVIEW
		WHERE reviewid = #{reviewId}
	</select>
	
<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="int">
		DELETE FROM REVIEW
		WHERE reviewid = #{reviewId}
	</delete>
	
<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="com.example.sproute.domain.Review">
		UPDATE REVIEW SET 
			TITLE = #{title},
			RATING = #{rating},
			CONTENT = #{content},
			REGDATE = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
		WHERE REVIEWID = #{reviewId}
	</update>

<!-- 리뷰 점수 평균 -->
	<select id="averageRating" resultType="com.example.sproute.domain.Review">
		SELECT AVG(RATING) AS AVG
		FROM REVIEW
		WHERE ITEMID = #{itemId}
	</select>
	
</mapper>